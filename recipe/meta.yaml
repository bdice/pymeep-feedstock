{% set name = "pymeep" %}
{% set version = "1.17.1" %}
{% set sha256 = "cea11aafe8be1d7ab762324d2dc7d9f4a9b713cee87f9722ced2c5cc30f53a99" %}
{% set buildnumber = 1 %}
# recipe-lint fails if mpi is undefined
{% set mpi = mpi or "nompi" %}
{% if mpi == "nompi" %}
# prioritize nompi via build number
{% set buildnumber = buildnumber + 100 %}
{% set mpi_prefix = "nompi" %}
{% else %}
{% set mpi_prefix = "mpi_" + mpi %}
{% endif %}

# We define a metapackage with extras needed for the tutorials/tests.
# The metapackage pymeep-extras requires the subpackage pymeep.
# Both pymeep and pymeep-extras are outputs of this recipe.

package:
  name: {{ name }}-extras
  version: {{ version }}

source:
  fn: meep-{{ version }}.tar.gz
  url: https://github.com/NanoComp/meep/releases/download/v{{ version }}/meep-{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: {{ buildnumber }}
  skip: true  # [win or py<36 or python_impl == "pypy"]
  # add build string so packages can depend on mpi or nompi variants
  # dependencies:
  #     `pymeep * mpi_mpich_*` for mpich
  #     `pymeep * mpi_*` for any mpi
  #     `pymeep * nompi_*` for no mpi
  string: {{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ buildnumber }}
  run_exports:
    - {{ name }}-extras * {{ mpi_prefix }}_*

requirements:
  run:
    - {{ pin_subpackage(name, exact=True) }} {{ mpi_prefix }}_*
    # Extras typically used at runtime
    - matplotlib-base
    - autograd
    - scipy
    - ffmpeg
    - h5utils * {{ mpi_prefix }}_*
    - mayavi

test:
  imports:
    - meep
    - meep.mpb

outputs:
  # Define the base package for pymeep.
  - name: {{ name }}
    version: {{ version }}
    # Add build string so packages can depend on mpi or nompi variants of dependencies:
    #     `pymeep * mpi_mpich_*` for mpich
    #     `pymeep * mpi_*` for any mpi
    #     `pymeep * nompi_*` for no mpi
    build:
      skip: true  # [win or py<36 or python_impl == "pypy"]
      string: {{ mpi_prefix }}_py{{ py }}h{{ PKG_HASH }}_{{ buildnumber }}
      run_exports:
        - {{ pin_subpackage(name, min_pin='x.x.x', max_pin='x') }} {{ mpi_prefix }}_*
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('fortran') }}
      host:
        - libblas
        - libcblas
        - liblapack
        - libgdsii >=0.21
        - {{ mpi }}  # [mpi != 'nompi']
        - mpi4py >=3.0  # [mpi != 'nompi']
        - python
        - libctl >=4.5.0
        - harminv >=1.4.1
        - mpb >=1.11 {{ mpi_prefix }}_*
        - hdf5 * {{ mpi_prefix }}_*
        - fftw * {{ mpi_prefix }}_*
        - numpy
        - gsl
      run:
        # more or less a copy of the specs above
        - libblas
        - libcblas
        - liblapack
        - libgdsii >=0.21
        - {{ mpi }}  # [mpi != 'nompi']
        - mpi4py >=3.0  # [mpi != 'nompi']
        - python
        - libctl >=4.5.0
        - harminv >=1.4.1
        - mpb >=1.11 {{ mpi_prefix }}_*
        - hdf5 * {{ mpi_prefix }}_*
        - fftw * {{ mpi_prefix }}_*
        - {{ pin_compatible('numpy') }}
        - h5py * {{ mpi_prefix }}_*
        - zlib
        - libopenblas
        - _openmp_mutex  # [linux]
    test:
      requires:
        - parallel
        - matplotlib-base
        - autograd
        - scipy
        - ffmpeg
      imports:
        - meep
        - meep.mpb
      source_files:
        - tests/cyl-ellipsoid-eps-ref.h5
        - python/tests/*.py
        - python/tests/data/*

about:
  home: https://github.com/NanoComp/meep
  license: GPL-2.0-or-later
  license_file: LICENSE
  summary: Free finite-difference time-domain (FDTD) software for electromagnetic simulations
  doc_url: https://meep.readthedocs.io
  dev_url: https://github.com/NanoComp/meep

extra:
  recipe-maintainers:
    - ChristopherHogan
    - oskooi
    - RobinD42
